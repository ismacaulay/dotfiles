# zsh performance tracing
# zmodload zsh/zprof
# zmodload zsh/datetime
# setopt PROMPT_SUBST
# PS4='+$EPOCHREALTIME %N:%i> '
#
# logfile=$(mktemp zsh_profile.XXXXXXXX)
# echo "Logging to $logfile"
# exec 3>&2 2>$logfile
#
# setopt XTRACE

HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.zsh_history

bindkey -e
bindkey "[D" backward-word
bindkey "[C" forward-word
setopt ignore_eof

export EDITOR='nvim'

if [ -f $HOME/workspaces/dotfiles/aliases ]; then . $HOME/workspaces/dotfiles/aliases; fi
if [ -f $HOME/workspaces/completion/alacritty.bash ]; then . $HOME/workspaces/completion/alacritty.bash; fi

# PROMPT='%F{yellow}%~ %(?.%F{green}→.%F{red}→)%f '

zstyle ':completion:*' menu select
autoload -U compinit && compinit
zmodload -i zsh/complist

# initialize zsh plugins
export NVM_LAZY_LOAD=true
source ~/.zsh-plugins/zsh-nvm/zsh-nvm.plugin.zsh
source ~/.zsh-plugins/evalcache/evalcache.plugin.zsh

export PATH="$HOME/.pyenv/bin:$PATH"
_evalcache pyenv init -
_evalcache pyenv virtualenv-init -
_evalcache starship init zsh

# zsh performance tracing
# unsetopt XTRACE
# exec 2>&3 3>&-

# Created by `userpath` on 2021-01-31 04:54:26
#export PATH="$PATH:/home/ian/.local/bin"

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"

# setup key accordingly
[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"       beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"        end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"     overwrite-mode
[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}"  backward-delete-char
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"     delete-char
[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"         up-line-or-history
[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"       down-line-or-history
[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"       backward-char
[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"      forward-char
[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"     beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"   end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}" ]] && bindkey -- "${key[Shift-Tab]}"  reverse-menu-complete

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
    autoload -Uz add-zle-hook-widget
    function zle_application_mode_start { echoti smkx }
    function zle_application_mode_stop { echoti rmkx }
    add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
    add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi

